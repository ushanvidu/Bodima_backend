name: CI/CD Pipeline - Bodima App

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
          MYSQL_DATABASE: testdb
          MYSQL_USER: testuser
          MYSQL_PASSWORD: testpass
        options: >-
          --health-cmd="mysqladmin ping -h localhost -u testuser -ptestpass"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
        ports:
          - 3306:3306

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      # Step 3: Build the project
      - name: Build project with Maven
        run: mvn clean compile -DskipTests
        env:
          SPRING_PROFILES_ACTIVE: ci

      # Step 4: Run Unit Tests
      - name: Run Unit Tests
        run: mvn test -Dtest="**/*ServiceTest.java,**/*Test.java" -DfailIfNoTests=false
        env:
          SPRING_PROFILES_ACTIVE: test
          SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3306/testdb
          SPRING_DATASOURCE_USERNAME: testuser
          SPRING_DATASOURCE_PASSWORD: testpass

      # Step 5: Run API Tests
      - name: Run API Tests
        run: mvn test -Dtest="**/*ApiTest.java"
        env:
          SPRING_PROFILES_ACTIVE: test
          SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3306/testdb
          SPRING_DATASOURCE_USERNAME: testuser
          SPRING_DATASOURCE_PASSWORD: testpass

      # Step 6: Generate Test Reports
      - name: Generate Test Reports
        run: |
          mkdir -p test-reports
          mvn surefire-report:report
          cp -r target/site/surefire-report.html test-reports/
          cp -r target/surefire-reports test-reports/

      # Step 7: Upload Test Reports as Artifact
      - name: Upload Test Reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-reports-${{ github.run_number }}
          path: |
            test-reports/
            target/surefire-reports/

      # Step 8: Build JAR package
      - name: Build JAR Package
        run: mvn package -DskipTests
        env:
          SPRING_PROFILES_ACTIVE: prod

      # Step 9: Upload JAR artifact
      - name: Upload JAR Artifact
        uses: actions/upload-artifact@v4
        with:
          name: bodima-app-${{ github.run_number }}
          path: target/*.jar

  # Optional: Deployment job (for demonstration)
  deploy-demo:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
      - name: Download JAR Artifact
        uses: actions/download-artifact@v4
        with:
          name: bodima-app-${{ github.run_number }}

      - name: Show Deployment Ready
        run: |
          echo "ðŸš€ Application is ready for deployment!"
          echo "JAR file: $(ls *.jar)"
          echo "Deployment would happen here to staging/production"